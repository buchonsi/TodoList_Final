{"version":3,"sources":["actions/index.js","components/Form.js","components/TodoItem.js","components/TodoItemList.js","components/TodoListTemplate.js","App.js","reportWebVitals.js","reducers/index.js","index.js"],"names":["apiUrl","process","Form","state","input","handleChange","e","setState","target","value","handleCreate","todo","text","checked","props","addTodo","handleKeyPress","key","this","className","onChange","onKeyPress","onClick","Component","connect","dispatch","axios","post","then","res","type","payload","data","catch","error","console","TodoItem","handleRemove","id","removeTodo","handleToggle","toggleTodo","nextProps","nextState","stopPropagation","delete","put","TodoItemList","fetchAllTodos","todos","todo_list","map","get","TodoListTemplate","form","children","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","store","createStore","action","Object","assign","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.83369843.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\n//Action type 정의\r\nexport const FETCH_TODOS = \"FETCH_TODOS\";\r\nexport const ADD_TODO = \"ADD_TODO\";\r\nexport const REMOVE_TODO = \"REMOVE_TODO\";\r\nexport const TOGGLE_TODO = \"TOGGLE_TODO\";\r\n\r\nconst apiUrl = process.env.REACT_APP_APIURL;\r\n//'http://localhost:8083/api/todos';\r\n\r\n//4. Todo 수정\r\nexport const toggleTodo = (todo) => {\r\n    return (dispatch) => {\r\n        axios.put(`${apiUrl}/${todo.id}`, todo)\r\n            .then(res => {\r\n                dispatch({\r\n                    type: TOGGLE_TODO,\r\n                    payload: res.data\r\n                });\r\n            })\r\n            .catch(error => {\r\n                console.error(error);\r\n                throw error;\r\n            });\r\n    }\r\n};\r\n\r\n//3. Todo 삭제\r\nexport const removeTodo = (id) => {\r\n    return (dispatch) => {\r\n        axios.delete(`${apiUrl}/${id}`)\r\n            .then(res => {\r\n                dispatch({\r\n                    type: REMOVE_TODO,\r\n                    payload: res.data\r\n                });\r\n            })\r\n            .catch(error => {\r\n                console.error(error);\r\n                throw error;\r\n            });\r\n    }\r\n};\r\n\r\n//2. Todo 등록\r\nexport const addTodo = (todo) => {\r\n    return (dispatch) => {\r\n        axios.post(apiUrl, todo)\r\n            .then(res => {\r\n                dispatch({\r\n                    type: ADD_TODO,\r\n                    payload: res.data\r\n                });\r\n            })\r\n            .catch(error => {\r\n                console.error(error);\r\n                throw error;\r\n            });\r\n    }\r\n};\r\n\r\n//1. Todo 목록 가져오기\r\nexport const fetchAllTodos = () => {\r\n    return (dispatch) => {\r\n        axios.get(apiUrl)\r\n            .then(res => {\r\n                dispatch({\r\n                    type: FETCH_TODOS,\r\n                    payload: res.data\r\n                });\r\n            })\r\n            .catch(error => {\r\n                console.error(error);\r\n                throw error;\r\n            });\r\n    }\r\n};\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './Form.css';\r\nimport { addTodo } from '../actions';\r\n\r\nclass Form extends Component {\r\n    state = {\r\n        input: ''\r\n    };\r\n\r\n    //Event Handler 메서드 선언\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            input: e.target.value // input 의 다음 바뀔 값\r\n        });\r\n    };\r\n    handleCreate = () => {\r\n        const { input } = this.state;\r\n        const todo = {\r\n            text: input,\r\n            checked: false\r\n        }\r\n        //action생성함수 호출\r\n        this.props.addTodo(todo);\r\n\r\n        this.setState({\r\n            input: '' // input 초기화\r\n       });\r\n    };\r\n    handleKeyPress = (e) => {\r\n        // 눌려진 키가 Enter 이면 handleCreate 호출\r\n        if (e.key === 'Enter') {\r\n            this.handleCreate();\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { input } = this.state;\r\n        const { handleChange, handleCreate, handleKeyPress } = this;\r\n        return (\r\n            <div className=\"form\">\r\n                <input value={input} onChange={handleChange}\r\n                    onKeyPress={handleKeyPress} />\r\n                <div className=\"create-button\" onClick={handleCreate}>\r\n                    추가\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(null,{addTodo})(Form);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './TodoItem.css';\r\nimport { removeTodo, toggleTodo } from '../actions';\r\n\r\nclass TodoItem extends Component {\r\n    /*\r\n        scu 메서드가 rendering 생략할 수 있는 조건을 반환\r\n        true이면(checked 값에 변동이 있음) render() 메서드가 다시 호출됨\r\n        false이면(checked 값에 변동이 없음) render() 메서드가 다시 호출되지 않음\r\n    */\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        return this.props.checked !== nextProps.checked;\r\n    }\r\n\r\n    //event handler\r\n    handleRemove = (id) => {\r\n        //action 생성함수 호출\r\n        this.props.removeTodo(id);\r\n    };\r\n    handleToggle = (todo) => {\r\n        //action 생성함수 호출\r\n        this.props.toggleTodo(todo);\r\n    }\r\n\r\n    render() {\r\n        const { text, checked, id } = this.props;\r\n        const { handleRemove, handleToggle } = this;\r\n\r\n        return (\r\n            <div className=\"todo-item\" onClick={() => {\r\n                const todo = {id, text, checked};\r\n                todo.checked = !todo.checked;\r\n                handleToggle(todo);\r\n            }}>\r\n                <div className=\"remove\" onClick={(e) => {\r\n                    e.stopPropagation(); // myToggle 이 실행되지 않도록 함\r\n                    handleRemove(id)\r\n                }\r\n                }>&times;</div>\r\n                <div className={`todo-text ${checked && 'checked'}`}>\r\n                    <div>{text}</div>\r\n                </div>\r\n                {\r\n                    checked && (<div className=\"check-mark\">✓</div>)\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default connect(null,{removeTodo, toggleTodo})(TodoItem);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport TodoItem from './TodoItem';\r\nimport { fetchAllTodos } from '../actions';\r\n\r\nclass TodoItemList extends Component {\r\n    /*\r\n      lifecycle method\r\n      render() 호출 후에 호출되어짐\r\n      서버와 http 통신을 하는 action 함수 호출하기\r\n    */ \r\n    componentDidMount() {\r\n        this.props.fetchAllTodos();        \r\n    }\r\n    \r\n    /*\r\n        lifecycle method\r\n        scu 메서드가 rendering 생략할 수 있는 조건을 반환\r\n        true이면(todos에 변동이 있음) render() 메서드가 다시 호출됨\r\n        false이면(todos에 변동이 없음) render() 메서드가 다시 호출되지 않음\r\n    */\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        return this.props.todos !== nextProps.todos;\r\n    }\r\n    \r\n    render() {\r\n        const { todos } = this.props;\r\n        const todo_list = todos.map(({id,text,checked}) => \r\n            (<TodoItem \r\n                id={id} text={text} checked={checked} key={id}\r\n            />));\r\n        return (\r\n            <div>\r\n                {todo_list}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    (state) => ({todos: state.todos}),\r\n    {fetchAllTodos}\r\n    )(TodoItemList);","import React from 'react';\r\nimport './TodoListTemplate.css';\r\nconst TodoListTemplate = ({ form, children }) => {\r\n    return (\r\n        <main className=\"todo-list-template\">\r\n            <div className=\"title\">\r\n                오늘의 할 일 ({process.env.REACT_APP_TITLE})\r\n            </div>\r\n            <section className=\"form-wrapper\">\r\n                {form}\r\n            </section>\r\n            <section className=\"todos-wrapper\">\r\n                {children}\r\n            </section>\r\n        </main>\r\n    );\r\n};\r\nexport default TodoListTemplate;\r\n","import React from 'react';\nimport Form from './components/Form';\nimport TodoItemList from './components/TodoItemList';\nimport TodoListTemplate from './components/TodoListTemplate';\n\nconst App = () => {\n    return (\n      <div>\n        <TodoListTemplate form={<Form />}>\n          <TodoItemList />\n        </TodoListTemplate>\n      </div>\n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as types from '../actions';\r\n\r\n//State 객체\r\nconst initialState = {\r\n    todos: [\r\n        {\r\n            id: 0,\r\n            text: '',\r\n            checked: false,\r\n        }\r\n    ]\r\n}\r\n//reducer 함수 선언\r\nexport const toDoReducer = (state=initialState, action) => {\r\n    switch (action.type) {\r\n        case types.ADD_TODO:\r\n        case types.REMOVE_TODO:\r\n        case types.TOGGLE_TODO:                \r\n        case types.FETCH_TODOS:\r\n            return Object.assign({}, state, {todos: action.payload});    \r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { toDoReducer } from './reducers';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst store = createStore(toDoReducer, composeWithDevTools(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}